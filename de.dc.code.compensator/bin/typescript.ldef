package org.eclipse.fx.code.editor.ldef.langs

ts {
	partitioning {
		partition __dftl_partition_content_type
		partition __ts_single_line_comment
		partition __ts_multi_line_comment
		partition __ts_string
		partition __ts_regex
		partition __ts_template
		rule {
			single_line __ts_single_line_comment 	"//" 	=> ''
			multi_line __ts_multi_line_comment 		"/*" 	=> "*/"
			single_line __ts_string 				"'"	 	=> "'" escaped by "\\"
			single_line __ts_string 				'"' 	=> '"' escaped by "\\"
			single_line __ts_regex					'/'		=> '/' escaped by "\\"
			multi_line __ts_template				'`'		=> '`' escaped by "\\"
		}
	}
	lexical_highlighting {
		rule __dftl_partition_content_type whitespace javawhitespace {
			default ts_default
			ts_operator {
				character [ ';', '.', '=', '/', '\\', '+', '-', '*', '<', '>', ':', '?', '!', ',', '|', '&', '^', '%', '~' ]
			}
			ts_bracket {
				character [ '(', ')', '{', '}', '[', ']' ]
			}
			ts_keyword {
				keywords [  "break",           "case",            "catch",           "class"
							, "const",           "continue",        "debugger",        "default"
							, "delete",          "do",              "else",            "enum"
							, "export",          "extends",         /*"false"*/           "finally"
							, "for"             ,"function",        "if",              "import"
							, "in",              "instanceof",      "new"             /*"null"*/
							, "return",          "super",           "switch",          "this"
							, "throw",           /*"true"*/         "try",             "typeof"
							, "var",             /*"void",*/            "while",           "with"

							, "implements",        "interface",         "let",               "package"
							, "private",         "protected",         "public",            "static"
							, "yield"

							, "abstract",          "as",                "async",             "await"
							, "constructor",      "declare",           "from",              "get"
							, "is",              "module",            "namespace",         "of"
							, "require",         "set",               "type"
	    					 ]
			}
			ts_builtin_types {
				keywords [ "any", "void", "string", "number", "boolean", "symbol" ]
			}
			ts_constant {
				keywords [ "true", "false", "undefined", "null" ]
			}
			ts_number {
				pattern "\\d" containing "[\\d|\\.]"
			}
		}
		rule __ts_single_line_comment {
			default ts_doc_default
		}
		rule __ts_multi_line_comment {
			default ts_doc_default
		}
		rule __ts_string {
			default ts_string
		}
		rule __ts_regex {
			default ts_string
		}
		rule __ts_template {
			default ts_string

			ts_variable_interpol {
				single_line "${" => "}"
			}
		}
		token_def {
			ts_default "-source-editor-code";
			ts_operator "-source-editor-operator";
			ts_bracket "-source-editor-bracket";
			ts_keyword "-source-editor-keyword" bold;
			ts_builtin_types "-source-editor-buitin-type" bold;
			ts_doc_default "-source-editor-doc";
			ts_string "-source-editor-string";
			ts_constant "-source-editor-keyword" bold;
			ts_number "-source-editor-number";
			ts_variable_interpol "-source-editor-string" bold;
		}
	}
//	integration {
//		javafx {
//			java "org.eclipse.fx.code.editor.langs.codegen.fx.ts" {
//				project : "org.eclipse.fx.code.editor.langs.codegen.fx"
//			}
//		}
//	}
}