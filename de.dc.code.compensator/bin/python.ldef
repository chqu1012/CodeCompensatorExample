package org.eclipse.fx.code.editor.ldef.langs

py {
	partitioning {
		partition __dftl_partition_content_type
		partition __python_multiline_comment
		partition __python_singleline_comment
		partition __python_string
		rule {
      		single_line __python_string '"' => '"' escaped by "\\"
      		single_line __python_singleline_comment '#' => ''
      		multi_line __python_multiline_comment "'''" => "'''"
      		single_line __python_string "'" => "'" escaped by "\\"
		}
	}
	lexical_highlighting {
		rule __dftl_partition_content_type whitespace javawhitespace {
			default python_default
			python_operator {
				character [ ';', '.', '=', '/', '\\', '+', '-', '*', '<', '>', ':', '?', '!', ',', '|', '&', '^', '%', '~' ]
			}
			python_bracket {
				character [ '(', ')', '{', '}', '[', ']' ]
			}
			python_keyword {
				keywords [
					'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'exec', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'not', 'or', 'pass', 'print', 'raise', 'return', 'try', 'while', 'with', 'yield'
					, 'return'
				]
			}
		}
		rule __python_multiline_comment {
			default python_doc_default
		}
		rule __python_singleline_comment {
			default python_doc_default
		}
		rule __python_string {
			default python_string
		}
		token_def {
			python_default "-source-editor-code";
			python_keyword "-source-editor-keyword" bold;
//			python_builtin_type "-source-editor-buitin-type" bold;
			python_string "-source-editor-string";
//			python_api_doc_default "-source-editor-api-doc";
			python_doc_default "-source-editor-doc";
		}
	}
//	integration {
//		javafx {
//			java "org.eclipse.fx.code.editor.langs.codegen.fx.python" {
//				project : "org.eclipse.fx.code.editor.langs.codegen.fx"
//			}
//		}
//	}
}